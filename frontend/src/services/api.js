// frontend/src/services/api.js
import axios from 'axios';

const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';

const api = axios.create({
    baseURL: API_BASE_URL,
    timeout: 60000,
    headers: {
        'Content-Type': 'application/json',
    },
});

// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
api.interceptors.request.use(
    (config) => {
        console.log('üì° API Request:', config.method.toUpperCase(), config.url, config.params);
        return config;
    },
    (error) => {
        console.error('‚ùå API Request Error:', error);
        return Promise.reject(error);
    }
);

api.interceptors.response.use(
    (response) => {
        console.log('‚úÖ API Response:', response.config.url, response.status, {
            companiesCount: response.data?.companies?.length,
            total: response.data?.total,
            dataKeys: Object.keys(response.data || {})
        });
        return response;
    },
    (error) => {
        console.error('‚ùå API Response Error:', {
            url: error.config?.url,
            status: error.response?.status,
            data: error.response?.data,
            message: error.message
        });

        if (error.response?.status === 404) {
            throw new Error('–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        } else if (error.response?.status === 500) {
            const errorDetail = error.response?.data?.detail || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞';
            throw new Error(errorDetail);
        } else if (error.code === 'ECONNABORTED') {
            throw new Error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∑–∞–ø—Ä–æ—Å');
        } else if (!error.response) {
            throw new Error('–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
        } else if (error.response?.data?.detail) {
            throw new Error(error.response.data.detail);
        }

        return Promise.reject(error);
    }
);

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –∫–æ–º–ø–∞–Ω–∏–π
export const searchCompanies = async (params) => {
    try {
        console.log('üîç API: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', params);
        const response = await api.get('/companies/search', { params });
        console.log('‚úÖ API: –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω:', {
            found: response.data?.companies?.length || 0,
            total: response.data?.total || 0
        });
        return response.data;
    } catch (error) {
        console.error('‚ùå API: –û—à–∏–±–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞:', error);
        throw error;
    }
};

// –ü–æ–∏—Å–∫ –∫–æ–º–ø–∞–Ω–∏–π –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
export const searchCompaniesByName = async (name, limit = 100) => {
    try {
        console.log('üè¢ API: –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é:', { name, limit });
        const response = await api.get('/companies/search/by-name', {
            params: { name, limit }
        });
        console.log('‚úÖ API: –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∑–∞–≤–µ—Ä—à–µ–Ω:', {
            found: response.data?.companies?.length || 0,
            total: response.data?.total || 0
        });
        return response.data;
    } catch (error) {
        console.error('‚ùå API: –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é:', error);
        throw error;
    }
};

// –ü–æ–∏—Å–∫ –∫–æ–º–ø–∞–Ω–∏–π –ø–æ –û–ö–í–≠–î
export const searchCompaniesByOkved = async (okved, limit = 100) => {
    try {
        console.log('üìã API: –ü–æ–∏—Å–∫ –ø–æ –û–ö–í–≠–î:', { okved, limit });
        const response = await api.get('/companies/search/by-okved', {
            params: { okved, limit }
        });
        console.log('‚úÖ API: –ü–æ–∏—Å–∫ –ø–æ –û–ö–í–≠–î –∑–∞–≤–µ—Ä—à–µ–Ω:', {
            found: response.data?.companies?.length || 0,
            total: response.data?.total || 0
        });
        return response.data;
    } catch (error) {
        console.error('‚ùå API: –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –û–ö–í–≠–î:', error);
        throw error;
    }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏
export const getCompanyById = async (inn) => {
    try {
        console.log('üè¢ API: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏:', inn);
        const response = await api.get(`/companies/${inn}`);
        console.log('‚úÖ API: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ–ª—É—á–µ–Ω–∞:', response.data?.name);
        return response.data;
    } catch (error) {
        console.error('‚ùå API: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏:', error);
        throw error;
    }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏
export const getCompanyAnalytics = async (inn) => {
    try {
        console.log('üìä API: –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏:', inn);
        const response = await api.get(`/companies/${inn}/analytics`);
        console.log('‚úÖ API: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ–ª—É—á–µ–Ω–∞:', {
            companyName: response.data?.company?.name,
            reportsCount: response.data?.reports?.length || 0,
            similarCount: response.data?.similar_companies?.length || 0
        });
        return response.data;
    } catch (error) {
        console.error('‚ùå API: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', error);
        throw error;
    }
};

export default api;