version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: company-analytics-postgres
    environment:
      POSTGRES_DB: company_analytics
      POSTGRES_USER: company_user
      POSTGRES_PASSWORD: company_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=ru_RU.UTF-8 --lc-ctype=ru_RU.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - company-analytics-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U company_user -d company_analytics"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: company-analytics-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://company_user:company_password@postgres:5432/company_analytics
      - DATANEWTON_API_KEY=ET05PwvL9kHa
      - DEBUG=True
    volumes:
      - ./backend:/app
    networks:
      - company-analytics-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: company-analytics-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://192.168.3.154:8000/api
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    networks:
      - company-analytics-network
    restart: unless-stopped
    depends_on:
      - backend

networks:
  company-analytics-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local